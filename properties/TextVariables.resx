<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BUTTON_BACK" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="BUTTON_CANCEL" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="BUTTON_EXIT" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="BUTTON_EXTRACTALL" xml:space="preserve">
    <value>Extract all</value>
  </data>
  <data name="BUTTON_EXTRACTCHOOSEFOLDER" xml:space="preserve">
    <value>Choose folder</value>
  </data>
  <data name="BUTTON_EXTRACTOPENFOLDER" xml:space="preserve">
    <value>Open folders</value>
  </data>
  <data name="BUTTON_EXTRACTSELECTED" xml:space="preserve">
    <value>Extract selected</value>
  </data>
  <data name="BUTTON_FINALOPENFOLDER" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="BUTTON_GALLERYOPENFOLDER" xml:space="preserve">
    <value>Open folder</value>
  </data>
  <data name="BUTTON_HINT" xml:space="preserve">
    <value>?</value>
  </data>
  <data name="BUTTON_LOAD" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="BUTTON_LOADLOCALPORTRAIT" xml:space="preserve">
    <value>Choose local</value>
  </data>
  <data name="BUTTON_LOADWEBPORTRAIT" xml:space="preserve">
    <value>Choose web</value>
  </data>
  <data name="BUTTON_MENU" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="BUTTON_NEW" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="BUTTON_NEXT" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="BUTTON_NO" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="BUTTON_OK" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="BUTTON_SELECTEDCHANGE" xml:space="preserve">
    <value>Change selected</value>
  </data>
  <data name="BUTTON_SELECTEDDELETE" xml:space="preserve">
    <value>Delete selected</value>
  </data>
  <data name="BUTTON_TOCREATE" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="BUTTON_TOEXRACTPAGE" xml:space="preserve">
    <value>Extract folder</value>
  </data>
  <data name="BUTTON_TOFILEPAGE" xml:space="preserve">
    <value>Create portrait</value>
  </data>
  <data name="BUTTON_TOGALLERYPAGE" xml:space="preserve">
    <value>Browse gallery</value>
  </data>
  <data name="BUTTON_YES" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="HINT_DELETEOLD" xml:space="preserve">
    <value>Do you want to delete the old version of the portrait?</value>
  </data>
  <data name="HINT_DELETESELECT" xml:space="preserve">
    <value>You are about to delete several or one image. Number of image: $VALUE. Do you want to delete these images?</value>
  </data>
  <data name="HINT_EXTRACTPAGE" xml:space="preserve">
    <value>This is Extract page</value>
  </data>
  <data name="HINT_FILEPAGE" xml:space="preserve">
    <value>This is the file page. Here you can choose which image to use as portrait. You can load a local image by clicking the button or the image, or simply drag and drop into the picture. As well, you can load a web picture by clicking the button.</value>
  </data>
  <data name="HINT_GALLERYPAGE" xml:space="preserve">
    <value />
  </data>
  <data name="HINT_NONSELECTED" xml:space="preserve">
    <value>No image selected. Select exactly one image to change.</value>
  </data>
  <data name="HINT_NONSELECTEDDELETE" xml:space="preserve">
    <value>No image selected. Select one or more images to delete.</value>
  </data>
  <data name="HINT_NONSELECTEDEXTRACE" xml:space="preserve">
    <value />
  </data>
  <data name="HINT_SCALEPAGE" xml:space="preserve">
    <value>This is a page to scale and crop the image as you see fit. Use the mouse wheel to zoom the image in and out. Double-click the image to restore it to original state. Drag image to adjust it. Click "Create" to add a new portrait. They will be almost exact copies of the images you set up in frames in this page. Press "Back" to return to previous page.</value>
  </data>
  <data name="HINT_SELECTEDMORE" xml:space="preserve">
    <value>More than one image selected. Only the first of the selected will be changed.</value>
  </data>
  <data name="INQR_NOIMAGECHOSEN" xml:space="preserve">
    <value>You did not load any images. However, you still can use the default image. Proceed with a default image, or choose your own?</value>
  </data>
  <data name="LABEL_COPY" xml:space="preserve">
    <value>Artemii "Zeight" Saganenko© 2023</value>
  </data>
  <data name="LABEL_CREATEDERROR" xml:space="preserve">
    <value>Something went wrong. Considering you reached this stage. It is rather a problem with game directory. Check directory existence shown above. Create it if needed. </value>
  </data>
  <data name="LABEL_CREATEDOK" xml:space="preserve">
    <value>The portrait was successfully created in the working directory, the location of which is shown above. It is now available to use in the game.</value>
  </data>
  <data name="LABEL_LARGEIMG" xml:space="preserve">
    <value>Large</value>
  </data>
  <data name="LABEL_LARGEIMG2" xml:space="preserve">
    <value>Character</value>
  </data>
  <data name="LABEL_MEDIUMIMG" xml:space="preserve">
    <value>Medium</value>
  </data>
  <data name="LABEL_MEDIUMIMG2" xml:space="preserve">
    <value>Skills</value>
  </data>
  <data name="LABEL_SMALLIMG" xml:space="preserve">
    <value>Small</value>
  </data>
  <data name="LABEL_SMALLIMG2" xml:space="preserve">
    <value>Gameplay</value>
  </data>
  <data name="LABEL_URLDIALOG" xml:space="preserve">
    <value>Drag and drop, input, or copy the url of an existing image. The url address must lead to an accessible web-source.</value>
  </data>
  <data name="MESG_ERRORNOTCREATED" xml:space="preserve">
    <value />
  </data>
  <data name="MESG_FOLDERNOTFOUND" xml:space="preserve">
    <value />
  </data>
  <data name="MESG_GAMEFOLDERNOTFOUND" xml:space="preserve">
    <value>Game folder was not found. Be sure that you have launched the game at least once. If the problem persists, inform in the bug section.</value>
  </data>
  <data name="MESG_WEBNOTLOADED" xml:space="preserve">
    <value />
  </data>
  <data name="MESG_WRONGFORMAT" xml:space="preserve">
    <value>The file is not in the correct format. Please select an image from the allowed formats. PNG, JPG, JPEG, BMP or GIF formats are allowed. The file may not be available as well.</value>
  </data>
  <data name="TEXTBOX_URL_INPUT" xml:space="preserve">
    <value>Input URL here</value>
  </data>
  <data name="TEXTBOX_URL_WRONG" xml:space="preserve">
    <value>Incorrect URL</value>
  </data>
  <data name="TEXT_COMMONOPENFILE" xml:space="preserve">
    <value>Choose folder</value>
  </data>
  <data name="TEXT_IMAGEFILTER" xml:space="preserve">
    <value>All images</value>
  </data>
  <data name="TEXT_TITLEOPENFILE" xml:space="preserve">
    <value>Choose image</value>
  </data>
</root>